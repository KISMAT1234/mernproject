{"ast":null,"code":"import * as yup from 'yup';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Swal from 'sweetalert2';\nimport apiUrl from '../config/apiUrl';\nimport Footer from \"./Footer\";\nimport Menu from \"./Menu\";\nimport { Link } from 'react-router-dom';\nlet registerSchema = yup.object().shape({\n  email: yup.string().required().email(),\n  password: yup.string().required()\n});\nfunction Login() {\n  // const {register,setError, handleSubmit, reset, formState: {errors}} = useForm({\n  //     resolver: yupResolver(registerSchema)\n  // });\n\n  // const errorColor={\n  //     color: \"red\"\n  // }\n\n  // const insertData = (data)=>{\n\n  //     apiUrl.post(\"/login\", data).then((response)=>{\n  //        if(response.data.notfound){\n  //         setError(\"email\", {type: \"manual\", message: response.data.notfound});\n  //        }else if(response.data.incorrect){\n  //         setError(\"password\", {\n  //             type: \"manual\",\n  //             message: response.data.incorrect\n  //         });\n  //        }else{\n  //         localStorage.setItem(\"token\", response.data.token);\n  //           reset();\n  //           window.location.href=\"/admin\";\n  //        }\n\n  //     }).catch((err)=>{\n  //         console.log(err);\n  //     })\n\n  // }\n\n  // return(\n  //     <div className=\"container\">\n  //         <Menu/>\n  //         <div className=\"row mb-3\">\n  //             <div className=\"col-md-12 mt-3\">\n  //                 <h1>Login To Dashboard</h1>\n  //             </div>\n  //         </div>\n  //         <div className=\"row mb-3\">\n  //             <form action=\"\" onSubmit={handleSubmit(insertData)}>\n  //                 <div className=\"form-group mb-2\">\n  //                     <label htmlFor=\"email\">Email:\n  //                     {errors.email && <a style={errorColor}>{errors.email.message}</a>}\n  //                     </label>\n  //                     <input type=\"email\" id=\"email\" name=\"email\"\n  //                      {...register(\"email\")}  \n  //                     className=\"form-control\"/>\n  //                 </div>\n  //                 <div className=\"form-group mb-3\">\n  //                                 <label htmlFor=\"password\">Password:\n  //                                     {errors.password && <a style={errorColor}>{errors.password.message}</a>}\n  //                                 </label>\n  //                                 <input type=\"password\" name=\"password\"\n  //                                        {...register(\"password\")}\n  //                                        id=\"password\" className=\"form-control\"/>\n  //                 </div>\n  //                 <div className=\"form-group mb-2\">\n  //                     <button className=\"btn btn-primary\">Login</button>\n  //                     <Link to=\"/password-reset\">Password Reset</Link>\n  //                     <Link to=\"/rigister\" className=\"float-end\">Rigister</Link>\n  //                 </div>\n  //             </form>\n  //         </div>\n\n  //         <Footer/>\n  //     </div>\n  // )\n}\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["yup","useForm","yupResolver","Swal","apiUrl","Footer","Menu","Link","registerSchema","object","shape","email","string","required","password","Login","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/mern7am/news/src/components/Login.js"],"sourcesContent":["import * as yup from 'yup';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport Swal from 'sweetalert2'\r\nimport apiUrl from '../config/apiUrl';\r\nimport Footer from \"./Footer\";\r\nimport Menu from \"./Menu\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nlet registerSchema = yup.object().shape({\r\n    email: yup.string().required().email(),\r\n    password: yup.string().required(),\r\n});\r\n\r\n\r\n\r\nfunction Login(){\r\n    // const {register,setError, handleSubmit, reset, formState: {errors}} = useForm({\r\n    //     resolver: yupResolver(registerSchema)\r\n    // });\r\n\r\n    // const errorColor={\r\n    //     color: \"red\"\r\n    // }\r\n\r\n    // const insertData = (data)=>{\r\n        \r\n    //     apiUrl.post(\"/login\", data).then((response)=>{\r\n    //        if(response.data.notfound){\r\n    //         setError(\"email\", {type: \"manual\", message: response.data.notfound});\r\n    //        }else if(response.data.incorrect){\r\n    //         setError(\"password\", {\r\n    //             type: \"manual\",\r\n    //             message: response.data.incorrect\r\n    //         });\r\n    //        }else{\r\n    //         localStorage.setItem(\"token\", response.data.token);\r\n    //           reset();\r\n    //           window.location.href=\"/admin\";\r\n    //        }\r\n         \r\n    //     }).catch((err)=>{\r\n    //         console.log(err);\r\n    //     })\r\n        \r\n    // }\r\n     \r\n\r\n    // return(\r\n    //     <div className=\"container\">\r\n    //         <Menu/>\r\n    //         <div className=\"row mb-3\">\r\n    //             <div className=\"col-md-12 mt-3\">\r\n    //                 <h1>Login To Dashboard</h1>\r\n    //             </div>\r\n    //         </div>\r\n    //         <div className=\"row mb-3\">\r\n    //             <form action=\"\" onSubmit={handleSubmit(insertData)}>\r\n    //                 <div className=\"form-group mb-2\">\r\n    //                     <label htmlFor=\"email\">Email:\r\n    //                     {errors.email && <a style={errorColor}>{errors.email.message}</a>}\r\n    //                     </label>\r\n    //                     <input type=\"email\" id=\"email\" name=\"email\"\r\n    //                      {...register(\"email\")}  \r\n    //                     className=\"form-control\"/>\r\n    //                 </div>\r\n    //                 <div className=\"form-group mb-3\">\r\n    //                                 <label htmlFor=\"password\">Password:\r\n    //                                     {errors.password && <a style={errorColor}>{errors.password.message}</a>}\r\n    //                                 </label>\r\n    //                                 <input type=\"password\" name=\"password\"\r\n    //                                        {...register(\"password\")}\r\n    //                                        id=\"password\" className=\"form-control\"/>\r\n    //                 </div>\r\n    //                 <div className=\"form-group mb-2\">\r\n    //                     <button className=\"btn btn-primary\">Login</button>\r\n    //                     <Link to=\"/password-reset\">Password Reset</Link>\r\n    //                     <Link to=\"/rigister\" className=\"float-end\">Rigister</Link>\r\n    //                 </div>\r\n    //             </form>\r\n    //         </div>\r\n            \r\n    //         <Footer/>\r\n    //     </div>\r\n    // )\r\n}\r\n\r\nexport default Login;"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SAAQC,OAAO,QAAO,iBAAiB;AACvC,SAAQC,WAAW,QAAO,yBAAyB;AACnD,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,IAAIC,cAAc,GAAGR,GAAG,CAACS,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACpCC,KAAK,EAAEX,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACF,KAAK,CAAC,CAAC;EACtCG,QAAQ,EAAEd,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC;AACpC,CAAC,CAAC;AAIF,SAASE,KAAKA,CAAA,EAAE;EACZ;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;AAAA;AACHC,EAAA,GArEQD,KAAK;AAuEd,eAAeA,KAAK;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}